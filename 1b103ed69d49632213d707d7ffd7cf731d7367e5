Revision: 1b103ed69d49632213d707d7ffd7cf731d7367e5
Patch-set: 1
File: services/audioflinger/Tracks.cpp

1011:70-1011:102
Wed Mar 02 01:26:59 2016 +0000
Author: Andy Hung <1040213@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c26bb568_e13d5aa6
Bytes: 137
or maybe isDirect() here? Seems like this could be a common problem with all direct tracks. Eric might be able to comment better than me.

1011:70-1011:102
Wed Mar 02 04:19:58 2016 +0000
Author: Sumit Bhattacharya <1057645@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c26bb568_e13d5aa6
UUID: 8209bdb1_57d09617
Bytes: 299
On nvidia platforms we use direct output for multi-channel and hra streams and we have not seen any issue for that. But we faced this issue for IEC958 streams.
For PCM direct streams (framesWritten >= mPresentationCompleteFrames) condition will satisfy but that does not happen for a non-pcm stream.

1011:70-1011:102
Wed Mar 02 19:47:28 2016 +0000
Author: Andy Hung <1040213@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8209bdb1_57d09617
UUID: 02594de9_842cbbdd
Bytes: 447
Just discussed with Eric - please see the calling function:

AudioFlinger::DirectOutputThread::prepareTracks_l()

it seems audioHalFrames should be 0 if !audio_is_linear_pcm(mFormat).  So this check should not be needed here unless (1) we have a stale value of mPresentationCompleteFrames or (2) mFormat in the track differs from the DirectOutputThread. Would it be possible to check this case again and see why this new clause is needed?

Thanks!

