Revision: 89023b2467c67c8423aa8b82e202b5a07ed52083
Patch-set: 3
File: /COMMIT_MSG

11
Sat Feb 28 01:44:33 2015 +0000
Author: Robert Shih <1043093@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 922486ae_6de6b534
Bytes: 11
audio/video

File: media/libstagefright/httplive/PlaylistFetcher.cpp

746
Mon Mar 02 21:25:09 2015 +0000
Author: Chong Zhang <1039918@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 52612e1e_f9d98f1b
Bytes: 438
If we return here, the scheduled download is not done. Would this be a problem when we're low in buffer? (as down switching doesn't require 10sec buffer)

Can we still handle the bandwidth check in LiveSession? PlaylistFetcher can post a notification message back to LiveSession if its buffering is over 10sec. It doesn't need to get involved in the bw checks.

Also why do we check bw before download? can we check the bw after download?

746
Tue Mar 03 15:30:17 2015 +0000
Author: Oscar Rydh√© <1017893@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 52612e1e_f9d98f1b
UUID: d2bd1ee7_77d39055
Bytes: 839
If we return here, we have detected that we need to do a configuration change to adapt to the current available bandwidth. If we would let the download continue a full segment would be downloaded before he configuration change can be done. This is needed especially if we are low in buffer, then a switch to a lower quality stream must be done as quickly as possible.
  
Since the PlaylistFetcher is running in the same message queue as LiveSession a bandwidth check message can only be executed in between downloads. There can be other messages delaying the execution of the message.

It would be possible to check the bw after the download. However we still need to abort before downloding if a reconfiguration is ongoing, e.g. if another fetcher has detected that a switch is required. We think it is better to keep it all in one place.

746
Tue Mar 03 19:02:25 2015 +0000
Author: Chong Zhang <1039918@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d2bd1ee7_77d39055
UUID: 92fd66c2_650ac6d9
Bytes: 487
We'd like to not add new code that calls from PlaylistFetcher back into LiveSession, if possible. Currently they run on the same looper, but we're considering moving PlaylistFetcher to its own looper so that data downloading won't block control flow in LiveSession. 
The bandwidth checking can be done in onMonitorQueue(), and PlaylistFetcher can post notification back to LiveSession when buffering is high or low. If buffering is low, PlaylistFetcher can stop scheduling new downloads.

