Revision: 6c337ac5b5e2f5d7503ff17318f5cd998b2e09ab
Patch-set: 3
File: include/drm/DrmInfoEvent.h

120
Wed Jul 24 21:23:09 2013 +0000
Author: Jeff Tinker <1005920@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 934d4312_84712c51
Bytes: 104
Call this ValueIterator or similar to indicate what is being iterated over.  Just Iterator is not clear.

120
Mon Jul 29 15:41:15 2013 +0000
Author: Takeshi Aimi <1017042@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 934d4312_84712c51
UUID: 53210b30_df2e1373
Bytes: 259
I used simple "Iterator" here in the same manner as DrmConstraints.h, DrmInfo.h, DrmInforRequest.h and DrmMetadate.h, where the same combination of "Iterator" and "KeyIterator"is commonly used.
It could be more understandable to keep this class name as it is.

221
Wed Jul 24 21:23:09 2013 +0000
Author: Jeff Tinker <1005920@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 934d4312_24b5b8c9
Bytes: 324
Since mDrmBuffer contains allocated memory, you should either disallow copy and assign on DrmInfoEvent or implement them explicitly.   DrmBuffer does not manage the memory for you.

Is there a reason to use DrmBuffer here instead of, say, Vector<uint8_t>, which would manage your memory automatically and avoid these issues?

221
Mon Jul 29 15:41:15 2013 +0000
Author: Takeshi Aimi <1017042@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 934d4312_24b5b8c9
UUID: 73d60f84_ca60a30d
Bytes: 516
You're definitely right, but DrmBuffer has been widely used in old DRM FW and it would look inconsistent if we introduce Vector<uint8_t> just for this class.

I'd prefer to use DrmBuffer by disallowing shallow copy of this class at least in this patch.

And, I'd like to create new stand-alone patch which will replace all the bad memory management of DrmBuffer with Vector<uint8_t>. (Or use Vector<uint8_t> as a internal memory of DrmBuffer.)

I'll add private copy contractor and operator=() in the next patch set.

