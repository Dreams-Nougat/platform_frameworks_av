Revision: 7994d60f2ce9508143c6afbf0695ece753b74324
Patch-set: 1
File: media/libstagefright/MPEG4Extractor.cpp

1536
Tue Dec 16 17:59:05 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 815d0834_e75ac2c3
Bytes: 58
the comment says '@' but the code says ©. which is right?

1536
Tue Dec 16 20:03:14 2014 +0000
Author: Chih-hung Hsieh <1052399@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 815d0834_e75ac2c3
UUID: 417dd09e_9571e47c
Bytes: 163
FOURCC(0xa9, ....) should be correct.
At line 2231 to 2256, we can see more such patterns.
Note that clang gives warning to FOURCC('\xA9', ...) for 64-bit targets.

1536
Tue Dec 16 20:26:14 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 417dd09e_9571e47c
UUID: 01ccb852_4b5e65c6
Bytes: 75
fix the comments then? and add a cast to FOURCC and then actually use '©'?

1536
Tue Dec 16 22:19:31 2014 +0000
Author: Lajos Molnar <1021605@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 01ccb852_4b5e65c6
UUID: 217a9caa_d4af5c9d
Bytes: 154
we may want to transition to '\xa9xyz' notation of FOURCC-s... would that solve this, or is that platform dependent?  I'll pass this to hunga@ as I am OOO

1536
Tue Dec 16 23:03:31 2014 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 217a9caa_d4af5c9d
UUID: e1ba449b_de24454d
Bytes: 428
The values of multi-char character constants are implementation defined, and any two are not even guaranteed to be distinct. In reality I believe clang and gcc agree, but I'd rather just not bother with it.

C++ standard, §2.14.3/1 - Character literals

(...) An ordinary character literal that contains more than one c-char is a multicharacter literal . A multicharacter literal has type int and implementation-deﬁned value.

